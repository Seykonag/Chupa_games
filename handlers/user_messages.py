from aiogram import Router, F
from aiogram.types import Message
from aiogram.fsm.context import FSMContext

from keyboards.tasks_menu import *
from keyboards.main_menu import menu

from data import Models

import emoji


router = Router()


@router.message(F.text.lower() == emoji.emojize('üìÑ') + '–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è')
async def instructions():
    pass


@router.message(F.text.lower() == emoji.emojize('üìÉ') + '–ø—Ä–∞–≤–∏–ª–∞')
async def rules():
    pass


@router.message(F.text.lower() == emoji.emojize('üíº') + '–∑–∞–¥–∞–Ω–∏—è')
async def task(message: Message):
    await message.answer(f'–õ–µ–≥–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ - {easy_task}' + emoji.emojize(':lollipop:') + '\n'
                         f'–°—Ä–µ–¥–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ - {normal_task}' + emoji.emojize(':lollipop:') + '\n'
                         f'–°–ª–æ–∂–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ - {hard_task}' + emoji.emojize(':lollipop:'),
                         reply_markup=tasks)


@router.message(F.text.lower() == (emoji.emojize(':lollipop:') + '–±–∞–ª–∞–Ω—Å'))
async def easy_task_call(message: Message):
    await message.answer(f'–í–∞—à –±–∞–ª–∞–Ω—Å {Models.return_value(message.from_user.id)} ' + emoji.emojize(':lollipop:'))


@router.message(F.text.lower() == emoji.emojize('‚¨Ö') + '–Ω–∞–∑–∞–¥')
async def back_menu(message: Message, state: FSMContext):
    await state.clear()
    await message.answer('–ú–µ–Ω—é', reply_markup=menu)
